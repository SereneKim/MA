# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
t_sum <- (data.frame(coef(summary(mod1))))
t_sum
colnames(t_sum) <- c("Estimate", "SE", "t_stat", "p_value")
t_sum$SE[1]
t_sum$SE[2]
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction", "Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
output_df <- rbind(output_df, coef_df, extra.t)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 13, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort", "Intercept_SE", "Mother_SE",
"Father_SE", "Interaction_SE", "Intercept_pr", "Mother_pr",
"Father_pr", "Interaction_pr")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
output_df <- rbind(output_df, coef_df, extra.t)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 14, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort", "Intercept_SE", "Mother_SE",
"Father_SE", "Interaction_SE", "Intercept_pr", "Mother_pr",
"Father_pr", "Interaction_pr")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
output_df <- rbind(output_df, coef_df, extra.t)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
output_df <- rbind(output_df, coef_df)
output_df <- cbind(output_df, extra.t)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
mod1= lm(test2$Edu_level~test2$Mother_Edu*test2$Father_Edu)
coef_m1 <- data.frame(t(data.frame(mod1$coefficients)))
extra <- data.frame(coef(summary(mod1)))
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
extra.t
cbind(coef_m1, extra.t)
coef_m1
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
binding <- cbind(coef_df, extra.t)
output_df <- rbind(output_df, binding)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
result_s1
head(result_s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
View(result_s1)
View(result_s2)
View(result_s3)
View(s1)
# Get Maximum Education of Parents
max_parents <- function(data){
for (i in 1:length(data)){
data$Max_Parents[i] <- max(data$Father_Edu[i], data$Mother_Edu[i])
data$Max_Cult_P[i] <- max(data$Father_Cultural[i], data$Mother_Cultural[k])
}
return(data)
}
s1 <- max_parents(s1)
s2 <- max_parents(s2)
s3 <- max_parents(s3)
head(s3)
# Get Maximum Education of Parents
max_parents <- function(data){
for (i in 1:length(data)){
data$Max_Parents[i] <- max(data$Father_Edu[i], data$Mother_Edu[i])
data$Max_Cult_P[i] <- max(data$Father_Cultural[i], data$Mother_Cultural[i])
}
return(data)
}
s1 <- max_parents(s1)
s2 <- max_parents(s2)
s3 <- max_parents(s3)
head(s3)
calculate_meanrank <- function(input_data) {
output_df <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(output_df) <- c("Mean Rank", "Var Rank", "Total", "Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j) %>% filter(rank(Max_Cult_P) < median(rank(Max_Cult_P)))
count = df2 %>% summarise(n = n())
rk = rank(df2$Cultural)
rank_df <- data.frame(data.frame(mean(rk), var(rk), count))
rank_df$Replication <- i  # Add the replication number 'i'
rank_df$Cohort <- j  # Add the cohort number 'j'
output_df <- rbind(output_df, rank_df)  # Append the row to the output dataframe
}}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   MM_Rank = mean(mean.rk.),
#   MV_Rank  = mean(var.rk.),
#   Mean_Total = mean(n),
#   VM_Rank = var(mean.rk.),
#   Var_Total = var(n),
#   Mean_Perc = mean(mean.rk. / n)
# )
return(output_df)
}
# Use the function with different data frames
result2_s1 <- calculate_meanrank(s1)
result2_s2 <- calculate_meanrank(s2)
result2_s3 <- calculate_meanrank(s3)
plot(result2_s1$Mean_Perc ~ result_s1$Cohort)
head(result2_s1)
df2 <- rbind(
data.frame(Scenario = 1, Cohort = result2_s1$Cohort, Mean_Rank = result2_s1$mean.rk., Var_Rank = result2_s1$var.rk., Total = result2_s1$n, Perc = result2_s1$mean.rk./result2_s1$n),
data.frame(Scenario = 2, Cohort = result2_s2$Cohort, Mean_Rank = result2_s2$mean.rk., Var_Rank = result2_s2$var.rk., Total = result2_s2$n, Perc = result2_s2$mean.rk./result2_s2$n),
data.frame(Scenario = 3, Cohort = result2_s3$Cohort, Mean_Rank = result2_s3$mean.rk., Var_Rank = result2_s3$var.rk., Total = result2_s3$n, Perc = result2_s3$mean.rk./result2_s3$n)
)
# Create the plots
ggplot(df2, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "lm", color = "blue", se = TRUE) +
geom_point(aes(y = Perc)) +
facet_wrap(~ Scenario, nrow = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_minimal()
View(s1)
s1$Mother_Cultural[1]
s1$Father_Cultural[1]
s1$Max_Cult_P[1]
s1$Mother_Cultural[12]
s1$Father_Cultural[12]
s1$Max_Cult_P[12]
s1$Mother_Cultural[69]
s1$Father_Cultural[69]
s1$Max_Cult_P[69]
length(s1)
length(s1$X)
# Get Maximum Education of Parents
max_parents <- function(data){
for (i in 1:length(s1$X)){
data$Max_Parents[i] <- max(data$Father_Edu[i], data$Mother_Edu[i])
data$Max_Cult_P[i] <- max(data$Father_Cultural[i], data$Mother_Cultural[i])
}
return(data)
}
s1 <- max_parents(s1)
s2 <- max_parents(s2)
s3 <- max_parents(s3)
rm(list=ls())
data_all <- lapply(Sys.glob(paths = "s*r*_analysis.csv"), read.csv)
# Combine all data frames into a single list
df_all <- reduce(data_all, rbind)
s1 <- df_all %>% filter(Scenario == 1 & Generation != 1)
s2 <- df_all %>% filter(Scenario == 2 & Generation != 1)
s3 <- df_all %>% filter(Scenario == 3 & Generation != 1)
# Correlation
ggpairs(s1[, c("Cohort", "Edu_level", "Generation", "Mother_Edu", "Father_Edu")])
# Get Maximum Education of Parents
max_parents <- function(data){
for (i in 1:length(data$X)){
data$Max_Parents[i] <- max(data$Father_Edu[i], data$Mother_Edu[i])
data$Max_Cult_P[i] <- max(data$Father_Cultural[i], data$Mother_Cultural[i])
}
return(data)
}
s1 <- max_parents(s1)
s2 <- max_parents(s2)
s3 <- max_parents(s3)
s1$Mother_Cultural[69]
s1$Father_Cultural[69]
s1$Max_Cult_P[69]
View(s1)
s1$Max_Parents
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
# extra <- data.frame(coef(summary(lm)))
# colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
# extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
#                       Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
# colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
# binding <- cbind(coef_df, extra.t)
# output_df <- rbind(output_df, binding)
output_df <- rbind(output_df, coef_df)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
head(result_s1)
result_s1$Scenario = 1
result_s2$Scenario = 2
result_s3$Scenario = 3
df <- rbind(result_s1, result_s2, result_s3)
head(df)
# Create the plots
ggplot(df, aes(x = Cohort)) +
geom_smooth(aes(y = Mother_Edu), method = "loess", color = "blue") +
geom_point(aes(y = Mother_Edu)) +
facet_wrap(~ Scenario, nrow = 3) +
labs(x = "Cohort", y = "Mother") +
theme_minimal()
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
binding <- cbind(coef_df, extra.t)
output_df <- rbind(output_df, binding)
output_df <- rbind(output_df, coef_df)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(output_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Edu_level~df2$Mother_Edu*df2$Father_Edu) # 2 main effects & 1 interaction effect
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Mother_SE = extra$SE[2], Father_SE = extra$SE[3], Interaction_SE = extra$SE[4],
Intercept_pr = extra$p_value[1], Mother_pr =extra$p_value[2], Father_pr = extra$p_value[3], Interaction_pr = extra$p_value[4])
colnames(coef_df) <- c("Intercept", "Mother_Edu", "Father_Edu", "Interaction")
coef_df$Replication <- i
coef_df$Cohort <- j
binding <- cbind(coef_df, extra.t)
output_df <- rbind(output_df, binding)
# output_df <- rbind(output_df, coef_df)
}
}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   Intercept = mean(X.Intercept.),
#   Mother = mean(df2.Mother_Edu),
#   Father = mean(df2.Father_Edu),
#   Int_var = var(X.Intercept.),
#   Mother_var = var(df2.Mother_Edu),
#   Father_var = var(df2.Father_Edu)
# )
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
head(result_s1)
result_s1$Scenario = 1
result_s2$Scenario = 2
result_s3$Scenario = 3
df <- rbind(result_s1, result_s2, result_s3)
head(df)
# Create the plots
ggplot(df, aes(x = Cohort)) +
geom_smooth(aes(y = Mother_Edu), method = "loess", color = "blue") +
geom_point(aes(y = Mother_Edu)) +
facet_wrap(~ Scenario, nrow = 3) +
labs(x = "Cohort", y = "Mother") +
theme_minimal()
ggplot(df, aes(x = Cohort)) +
geom_smooth(aes(y = Father_Edu), method ="loess", color = "red") +
geom_point(aes(y = Father_Edu)) +
facet_wrap(~ Scenario, nrow = 3) +
labs(x = "Cohort", y = "Father") +
theme_minimal()
ggplot(df, aes(x = Cohort)) +
geom_smooth(aes(y = Interaction), method = "loess", color = "green") +
geom_point(aes(y = Interaction)) +
facet_wrap(~ Scenario, nrow = 3) +
labs(x = "Cohort", y = "Mother*Father") +
theme_minimal()
source("~/Desktop/Thesis_SeorinKim/MasterThesis_Seorin_Kim/extra/Analysis_S1R1.R")
require(Hmisc)
install.packages("Hmisc")
require(Hmisc)
library(foreign)
test
test = s1 %>% filter(Replication == 1)
test2 = test %>% filter(Cohort == 3)
polr(test2$Edu_level~test2$Mother_Edu*test2$Father_Edu)
test2$Edu_level <- as.factor(test2$Edu_level)
polr(test2$Edu_level~test2$Mother_Edu*test2$Father_Edu)
test2$Mother_Edu <- as.factor(test2$Mother_Edu)
test2$Father_Edu <- as.factor(test2$Father_Edu)
polr(test2$Edu_level~test2$Mother_Edu*test2$Father_Edu)
test2 = test %>% filter(Cohort == 3)
test2$Edu_level <- as.factor(test2$Edu_level)
polr(test2$Edu_level~test2$Mother_Edu*test2$Father_Edu)
test2$Mother_Edu <- as.factor(test2$Mother_Edu)
test2$Father_Edu <- as.factor(test2$Father_Edu)
m2 <- polr(test2$Edu_level~test2$Mother_Edu + test2$Father_Edu)
summary(m2)
m2 <- polr(test2$Edu_level~test2$Mother_Edu + test2$Father_Edu, Hess = TRUE, method = logistic)
m2 <- polr(test2$Edu_level~test2$Mother_Edu + test2$Father_Edu, Hess = TRUE, method = "logistic")
m2 <- polr(test2$Edu_level~test2$Mother_Edu, Hess = TRUE, method = "logistic")
summary(m2)
ctable <- coef(summary(m2))
ctable
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
ctable <- cbind(ctable, "p value" = p)
ctable
m2 <- polr(test2$Edu_level~test2$Mother_Edu + test2$Father_Edu, Hess = TRUE, method = "logistic")
summary(m2)
ctable <- coef(summary(m2))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
ctable <- cbind(ctable, "p value" = p)
ctable
m2 <- polr(test2$Edu_level~ test2$Father_Edu, Hess = TRUE, method = "logistic")
summary(m2)
ctable <- coef(summary(m2))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
ctable <- cbind(ctable, "p value" = p)
ctable
