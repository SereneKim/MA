rpois(100, 1.6)
1.6*1/2
1/6*1/6
1/.6*1/6
1.6*1/6
1.6*1/9
1.6*1/10
1.6*1/10+(1.6)^2*1/10
1.6*1/9+(1.6)^2*1/9
1.6*1+(1.6)^2*1
rpois(1.6*1/9+(1.6)^2*1/9)
rpois(0.4)
rpois(10,0.4)
rpois(10,0.02)
1/1.5
(1/1.5+1/0.6)/2
sqrt(1/1.5*1/0.6)
(1/1.3+1/0.8)/2
sqrt(1/1.3*1/0.8)
(1/1.3+1/0.9)/2
(1/1.3+1/0.7)/2
sqrt(1/1.3*1/0.7)
sqrt(1/1.3*1/0.75)
(1/1.3+1/0.75)/2
(1/1.5+1/0.6)/2
sqrt(1/1.5*1/0.6)
(1/1.3+1/0.75)/2
sqrt(1/1.3*1/0.75)
sqrt(1/1.3*1/0.7)
sqrt(1/1.3*1/0.65)
(1/1.3+1/0.65)/2
1/1.5
1/1.3
1/0.8
1/1.5
1/0.6
library(dplyr)
library(car)
library(tibble)
library(MASS)
library(lme4)
require(GGally)
# install.packages("brms")
library(brms)
library(purrr)
# library(nlme)
library(lmerTest)
setwd("/Users/serenekim/Desktop/Thesis_SeorinKim/MasterThesis_Seorin_Kim/data")
abs1 <- read.csv('absolute_measure1.csv', header = T)
abs2 <- read.csv('absolute_measure2.csv', header = T)
abs1_ex <- read.csv('absolute_measure1_all.csv', header = T)  %>% filter(Scenario >=4)
abs2_ex <- read.csv('absolute_measure2_all.csv', header = T)  %>% filter(Scenario >=4)
View(abs1_ex)
abs1b <- read.csv('absolute_measure1_sum.csv', header = T)
abs2b <- read.csv('absolute_measure2_sum.csv', header = T)
abs1b_ex <- read.csv('absolute_measure1_sum_all.csv', header = T) %>% filter(Scenario >=4)
abs2b_ex <- read.csv('absolute_measure2_sum_all.csv', header = T) %>% filter(Scenario >=4)
View(abs2b_ex)
rm(list=ls())
library(dplyr)
library(car)
library(tibble)
library(MASS)
library(lme4)
require(GGally)
# install.packages("brms")
library(brms)
library(purrr)
library(Hmisc)
library(foreign)
library(ggplot2)
library(ggforce)
# Data -------------------------------------------------------------------
setwd("/Users/serenekim/Desktop/Thesis_SeorinKim/MasterThesis_Seorin_Kim/data")
folder_path = "/Users/serenekim/Desktop/Thesis_SeorinKim/MasterThesis_Seorin_Kim/data"
file_list <- list.files(path = folder_path, pattern = "^s\\d+r\\d+_analysis\\.csv$", full.names = TRUE)
data_all <- lapply(file_list, read.csv)
# Combine all data frames into a single list
df_all <- reduce(data_all[1:30], rbind)
df_extreme <- reduce(data_all[31:50], rbind)
s1 <- df_all %>% filter(Scenario == 1 & Generation != 1)
s2 <- df_all %>% filter(Scenario == 2 & Generation != 1)
s3 <- df_all %>% filter(Scenario == 3 & Generation != 1)
s4 <- df_extreme %>% filter(Scenario == 4 & Generation != 1)
s5 <- df_extreme %>% filter(Scenario == 5 & Generation != 1)
# Get Maximum Education of Parents
max_parents <- function(data){
for (i in 1:length(data$X)){
data$Max_Parents[i] <- max(data$Father_Edu[i], data$Mother_Edu[i])
data$Max_Cult_P[i] <- max(data$Father_Cultural[i], data$Mother_Cultural[i])
}
return(data)
}
s1 <- max_parents(s1)
s2 <- max_parents(s2)
s3 <- max_parents(s3)
s4 <- max_parents(s4)
s5 <- max_parents(s5)
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(output_df) <- c("Intercept", "Parents_Edu",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Cultural~df2$Max_Cult_P)
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Parents_SE = extra$SE[2],
Intercept_pr = extra$p_value[1], Parents_pr =extra$p_value[2])
colnames(coef_df) <- c("Intercept", "Parents_Edu")
coef_df$Replication <- i
coef_df$Cohort <- j
binding <- cbind(coef_df, extra.t)
output_df <- rbind(output_df, binding)
}
}
return(output_df)
}
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
result_s4 <- calculate_coefficients(s4)
result_s5 <- calculate_coefficients(s5)
result_s1$Scenario = 1
result_s2$Scenario = 2
result_s3$Scenario = 3
df <- rbind(result_s1, result_s2, result_s3)
df$label <- ifelse(df$Scenario == 1, "Scenario 1", ifelse(df$Scenario == 2, "Scenario 2", "Scenario 3"))
result_s4$Scenario = 4
result_s5$Scenario = 5
df_ex <- rbind(result_s4, result_s5)
df_ex$label <- ifelse(df_ex$Scenario == 4, "True Homogamy", "True Heterogamy")
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_SE), method ="loess") +
geom_point(aes(y = Parents_SE, alpha = 0.1)) +
facet_wrap(~ label, ncol = 2) +
labs(x = "Cohort", y = "Standard Error") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#EF553B','#636EFA'))
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_SE, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Standard Errors", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_SE, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Standard Errors", title = "True Homogamy") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_SE, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Standard Errors", title = "True Heterogamy") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
setwd("/Users/serenekim/Desktop/Thesis_SeorinKim/MasterThesis_Seorin_Kim/images")
## Extreme Cases SE
png(filename = "Zcoef_homo_SE.png", width = 800, res = 100)
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_SE, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Standard Errors", title = "True Homogamy") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
png(filename = "Zcoef_hetero_SE.png", width = 800, res = 100)
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_SE, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Standard Errors", title = "True Heterogamy") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
ggplot(result_s1, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_SE, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 1") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
ggplot(result_s1, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_SE, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 1") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
ggplot(result_s2, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_SE, alpha=0.5), color ='#EF553B') +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 2") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
ggplot(result_s3, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = '#00CC96') +
geom_point(aes(y = Parents_SE, alpha=0.5), color ='#00CC96') +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 3") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
# SE ----------------------------------------------------------------------
png(filename = "Zcoef_scen1_SE.png", width = 800, res = 100)
ggplot(result_s1, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_SE, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 1") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
png(filename = "Zcoef_scen2_SE.png", width = 800, res = 100)
ggplot(result_s2, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_SE, alpha=0.5), color ='#EF553B') +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 2") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
png(filename = "Zcoef_scen3_SE.png", width = 800, res = 100)
ggplot(result_s3, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_SE), method = "loess", color = '#00CC96') +
geom_point(aes(y = Parents_SE, alpha=0.5), color ='#00CC96') +
labs(x = "Cohort", y = "Standard Errors", title = "Scenario 3") +
facet_zoom( ylim = c(0, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
calculate_meanrank <- function(input_data) {
output_df <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(output_df) <- c("Mean Rank", "Var Rank", "Total", "Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j) %>% filter(rank(Max_Cult_P) < median(rank(Max_Cult_P)))
count = df2 %>% summarise(n = n())
rk = rank(df2$Cultural)
rank_df <- data.frame(data.frame(mean(rk), var(rk), count))
rank_df$Replication <- i  # Add the replication number 'i'
rank_df$Cohort <- j  # Add the cohort number 'j'
output_df <- rbind(output_df, rank_df)  # Append the row to the output dataframe
}}
# sample <- output_df %>% filter(Cohort <= 55)
# tb <- sample %>% group_by(Cohort) %>% summarise(
#   MM_Rank = mean(mean.rk.),
#   MV_Rank  = mean(var.rk.),
#   Mean_Total = mean(n),
#   VM_Rank = var(mean.rk.),
#   Var_Total = var(n),
#   Mean_Perc = mean(mean.rk. / n)
# )
return(output_df)
}
# Use the function with different data frames
result2_s1 <- calculate_meanrank(s1)
result2_s2 <- calculate_meanrank(s2)
result2_s3 <- calculate_meanrank(s3)
result2_s4 <- calculate_meanrank(s4)
result2_s5 <- calculate_meanrank(s5)
df2 <- rbind(
data.frame(Scenario = "Scenario 1", Cohort = result2_s1$Cohort, Mean_Rank = result2_s1$mean.rk., Var_Rank = result2_s1$var.rk., Total = result2_s1$n, Perc = result2_s1$mean.rk./result2_s1$n),
data.frame(Scenario = "Scenario 2", Cohort = result2_s2$Cohort, Mean_Rank = result2_s2$mean.rk., Var_Rank = result2_s2$var.rk., Total = result2_s2$n, Perc = result2_s2$mean.rk./result2_s2$n),
data.frame(Scenario = "Scenario 3", Cohort = result2_s3$Cohort, Mean_Rank = result2_s3$mean.rk., Var_Rank = result2_s3$var.rk., Total = result2_s3$n, Perc = result2_s3$mean.rk./result2_s3$n)
)
df2_ex <- rbind(
data.frame(Scenario = "True Homogamy", Cohort = result2_s4$Cohort, Mean_Rank = result2_s4$mean.rk., Var_Rank = result2_s4$var.rk., Total = result2_s4$n, Perc = result2_s4$mean.rk./result2_s4$n),
data.frame(Scenario = "True Heterogamy", Cohort = result2_s5$Cohort, Mean_Rank = result2_s5$mean.rk., Var_Rank = result2_s5$var.rk., Total = result2_s5$n, Perc = result2_s5$mean.rk./result2_s5$n)
)
ggplot(result2_s4, aes(x = Cohort, y= mean.rk./n)) +
geom_smooth( method = "loess", color = '#636EFA') +
geom_point(aes(alpha=0.5), color = '#636EFA') +
labs(x = "Cohort", y = "Mean Rank", title = "True Homogamy") +
facet_zoom( xlim = c(0, 40), ylim = c(0.5, 0.6)) +
theme_light() + theme(legend.position="none")
ggplot(result2_s5, aes(x = Cohort, y= mean.rk./n)) +
geom_smooth( method = "loess", color = '#EF553B') +
geom_point(aes(alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Mean Rank", title = "True Heterogamy") +
facet_zoom( xlim = c(0, 40), ylim = c(0.5, 0.6)) +
theme_light() + theme(legend.position="none")
png(filename = "rank_scens_homo.png", width = 800, res = 100)
ggplot(result2_s4, aes(x = Cohort, y= mean.rk./n)) +
geom_smooth( method = "loess", color = '#636EFA') +
geom_point(aes(alpha=0.5), color = '#636EFA') +
labs(x = "Cohort", y = "Mean Rank", title = "True Homogamy") +
facet_zoom( xlim = c(0, 40), ylim = c(0.5, 0.6)) +
theme_light() + theme(legend.position="none")
dev.off()
png(filename = "rank_scens_hetero.png", width = 800, res = 100)
ggplot(result2_s5, aes(x = Cohort, y= mean.rk./n)) +
geom_smooth( method = "loess", color = '#EF553B') +
geom_point(aes(alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Mean Rank", title = "True Heterogamy") +
facet_zoom( xlim = c(0, 40), ylim = c(0.5, 0.6)) +
theme_light() + theme(legend.position="none")
dev.off()
