facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
# Create the plots (With Percentiles)
png(filename = "rank_scens_ex.png", width = 800, res = 100)
ggplot(df2, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "loess", color = "#636EFA", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
dev.off()
png(filename = "rank_scens_ex.png", width = 800, res = 100)
ggplot(df2_ex, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "loess", color = "#636EFA", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
dev.off()
# Create the plots (With Percentiles)
png(filename = "rank_scens.png", width = 800, res = 100)
ggplot(df2, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "loess", color = "#636EFA", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
dev.off()
png(filename = "rank_scens_ex.png", width = 800, res = 100)
ggplot(df2_ex, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "loess", color = "#636EFA", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
dev.off()
ggplot(df2, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "loess", color = c('#636EFA', '#EF553B', '#00CC96'), se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
ggplot(df2, aes(x = Cohort)) +
geom_smooth(aes(y = Perc), method = "loess", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3,  color = c('#636EFA', '#EF553B', '#00CC96')) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
ggplot(df2, mapping = aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Perc), method = "loess", color = "#636EFA", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1), color = "#636EFA") +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
ggplot(df2, mapping = aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Perc), method = "loess", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1)) +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
ggplot(df2, mapping = aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Perc), method = "loess", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1)) +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
# Create the plots (With Percentiles)
png(filename = "rank_scens.png", width = 800, res = 100)
ggplot(df2, mapping = aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Perc), method = "loess", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1)) +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
dev.off()
ggplot(df2_ex, aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Perc), method = "loess", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1)) +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
png(filename = "rank_scens_ex.png", width = 800, res = 100)
ggplot(df2_ex, aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Perc), method = "loess", se = TRUE) +
geom_point(aes(y = Perc, alpha = 0.1)) +
facet_wrap(~ Scenario, ncol = 3) +
labs(x = "Cohort", y = "Percentile of the child rankings") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
dev.off()
ggplot(df, aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(.~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
ggplot(df, mapping = aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(.~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
ggplot(df, mapping = aes(x = Cohort, color = Scenario)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(.~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))
ggplot(df, mapping = aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(.~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
png(filename = "coef_scens.png", width = 800, res = 100)
ggplot(df, mapping = aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(.~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
dev.off()
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
png(filename = "coef_scens_ex.png", width = 800, res = 100)
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
dev.off()
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5)) +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) +
theme(legend.position="none")
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5)) +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) +
theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) +
theme(legend.position="none") + theme_light()
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none") + title(main="True Homogamy")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none") + labs(main="True Homogamy")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) + title(main = "True Homogamy")+
theme_light() + theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents") +
facet_zoom( ylim = c(-1, 1)) + ggtitle(main = "True Homogamy")+
theme_light() + theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents", main = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy", caption = "Coefficient") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme(legend.position="none")
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme(legend.position="none")
## Extreme Cases
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
## Extreme Cases
png(filename = "Zcoef_scens.png", width = 800, res = 100)
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
png(filename = "Zcoef_scens_ex.png", width = 800, res = 100)
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme(legend.position="none")
dev.off()
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
png(filename = "Zcoef_scens_ex.png", width = 800, res = 100)
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
## Extreme Cases
png(filename = "Zcoef_homo.png", width = 800, res = 100)
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = "#636EFA") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#636EFA") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
png(filename = "Zcoef_hetero.png", width = 800, res = 100)
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#EF553B') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#EF553B') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = "#EF553B") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#EF553B") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
## Extreme Cases
png(filename = "Zcoef_homo.png", width = 800, res = 100)
ggplot(result_s4, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = "#EF553B") +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = "#EF553B") +
labs(x = "Cohort", y = "Parents", title = "True Homogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#636EFA') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#636EFA') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
png(filename = "Zcoef_hetero.png", width = 800, res = 100)
ggplot(result_s5, aes(x = Cohort)) +
geom_smooth(aes(y = Parents_Edu), method = "loess", color = '#636EFA') +
geom_point(aes(y = Parents_Edu, alpha=0.5), color = '#636EFA') +
labs(x = "Cohort", y = "Parents", title = "True Heterogamy") +
facet_zoom( ylim = c(-1, 1)) +
theme_light() + theme(legend.position="none")
dev.off()
result_s4
plot(result_s4$Cohort ~ result_s4$Parents_pr)
plot(result_s4$Parents_pr ~ result_s4$Cohort)
plot(result_s5$Parents_pr ~ result_s5$Cohort)
plot(result_s4$Parentsr_SE ~ result_s4$Cohort)
plot(result_s5$Parents_SE ~ result_s5$Cohort)
plot(result_s4$Parents_SE ~ result_s4$Cohort)
plot(result_s5$Parents_SE ~ result_s5$Cohort)
plot(result_s4$Parentsr_SE ~ result_s4$Cohort)
plot(result_s5$Parentsr_SE ~ result_s5$Cohort)
df
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(output_df) <- c("Intercept", "Parents_Edu",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$Cultural~df2$Max_Cult_P)
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Parents_SE = extra$SE[2],
Intercept_pr = extra$p_value[1], Parents_pr =extra$p_value[2])
colnames(coef_df) <- c("Intercept", "Parents_Edu")
coef_df$Replication <- i
coef_df$Cohort <- j
binding <- cbind(coef_df, extra.t)
output_df <- rbind(output_df, binding)
}
}
return(output_df)
}
result_s1 <- calculate_coefficients(s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
result_s4 <- calculate_coefficients(s4)
result_s5 <- calculate_coefficients(s5)
result_s1$Scenario = 1
result_s2$Scenario = 2
result_s3$Scenario = 3
df <- rbind(result_s1, result_s2, result_s3)
df$label <- ifelse(df$Scenario == 1, "Scenario 1", ifelse(df$Scenario == 2, "Scenario 2", "Scenario 3"))
result_s4$Scenario = 4
result_s5$Scenario = 5
df_ex <- rbind(result_s4, result_s5)
df_ex$label <- ifelse(df_ex$Scenario == 4, "True Homogamy", "True Heterogamy")
plot(result_s4$Parents_SE ~ result_s4$Cohort)
plot(result_s5$Parents_SE ~ result_s5$Cohort)
df_ex
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_SE), method ="loess") +
geom_point(aes(y = Parents_SE, alpha = 0.1)) +
facet_wrap(~ label, nrow = 3) +
labs(x = "Cohort", y = "Standard Error") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_SE), method ="loess") +
geom_point(aes(y = Parents_SE, alpha = 0.1)) +
facet_wrap(~ label, ncol = 2) +
labs(x = "Cohort", y = "Standard Error") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
png(filename = "SE_scens_ex.png", width = 800, res = 100)
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_SE), method ="loess") +
geom_point(aes(y = Parents_SE, alpha = 0.1)) +
facet_wrap(~ label, ncol = 2) +
labs(x = "Cohort", y = "Standard Error") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
dev.off()
s1$sMax_Cult_P <- scale(s1$Max_Cult_P, center = TRUE, scale = TRUE)
s2$sMax_Cult_P <- scale(s2$Max_Cult_P, center = TRUE, scale = TRUE)
s3$sMax_Cult_P <- scale(s3$Max_Cult_P, center = TRUE, scale = TRUE)
s4$sMax_Cult_P <- scale(s4$Max_Cult_P, center = TRUE, scale = TRUE)
s5$sMax_Cult_P <- scale(s5$Max_Cult_P, center = TRUE, scale = TRUE)
s1$sEdu_level <- scale(s1$Edu_level, center = TRUE, scale = TRUE)
s2$sEdu_level <- scale(s2$Edu_level, center = TRUE, scale = TRUE)
s3$sEdu_level <- scale(s3$Edu_level, center = TRUE, scale = TRUE)
s4$sEdu_level <- scale(s4$Edu_level, center = TRUE, scale = TRUE)
s5$sEdu_level <- scale(s5$Edu_level, center = TRUE, scale = TRUE)
s1$sEdu_level
unique(s1$sEdu_level)
unique(s1$Edu_level)
s1$sCultural <- scale(s1$Cultural, center = TRUE, scale = TRUE)
s2$sCultural <- scale(s2$Cultural, center = TRUE, scale = TRUE)
s3$sCultural <- scale(s3$Cultural, center = TRUE, scale = TRUE)
s4$sCultural <- scale(s4$Cultural, center = TRUE, scale = TRUE)
s5$sCultural <- scale(s5$Cultural, center = TRUE, scale = TRUE)
unique(s1$sCultural)
unique(s1$Cultural)
calculate_coefficients <- function(input_data) {
output_df <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(output_df) <- c("Intercept", "Parents_Edu",
"Replication", "Cohort")
for (i in 1:10){
df = input_data %>% filter(Replication == i)
for (j in unique(df$Cohort)){
df2 = df %>% filter(Cohort == j)
lm = lm(df2$sCultural~df2$sMax_Cult_P)
coef_df <- data.frame(t(data.frame(lm$coefficients)))  # Transpose the coefficients dataframe
extra <- data.frame(coef(summary(lm)))
colnames(extra) <- c("Estimate", "SE", "t_stat", "p_value")
extra.t <- data.frame(Intercept_SE = extra$SE[1], Parents_SE = extra$SE[2],
Intercept_pr = extra$p_value[1], Parents_pr =extra$p_value[2])
colnames(coef_df) <- c("Intercept", "Parents_Edu")
coef_df$Replication <- i
coef_df$Cohort <- j
binding <- cbind(coef_df, extra.t)
output_df <- rbind(output_df, binding)
}
}
return(output_df)
}
result_s4 <- calculate_coefficients(s4)
result_s5 <- calculate_coefficients(s5)
result_s4$Scenario = 4
result_s5$Scenario = 5
df_ex <- rbind(result_s4, result_s5)
df_ex$label <- ifelse(df_ex$Scenario == 4, "True Homogamy", "True Heterogamy")
ggplot(df_ex, aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
unique(s1$Cultural)
unique(s1$sCultural)
# Use the function with different data frames
result_s1 <- calculate_coefficients(s1)
result_s2 <- calculate_coefficients(s2)
result_s3 <- calculate_coefficients(s3)
result_s1$Scenario = 1
result_s2$Scenario = 2
result_s3$Scenario = 3
df <- rbind(result_s1, result_s2, result_s3)
df$label <- ifelse(df$Scenario == 1, "Scenario 1", ifelse(df$Scenario == 2, "Scenario 2", "Scenario 3"))
ggplot(df, mapping = aes(x = Cohort, color = label)) +
geom_smooth(aes(y = Parents_Edu), method ="loess") +
geom_point(aes(y = Parents_Edu, alpha = 0.1)) +
facet_wrap(.~ label, nrow = 3) +
labs(x = "Cohort", y = "Parents") +
theme_light() + theme(legend.position="none", strip.text.x = element_text(size = 10, colour = "black"))+
theme(strip.background =element_rect(fill="#e6e5e3"))+
scale_color_manual(values=c('#636EFA', '#EF553B', '#00CC96'))
result_s5
rm(list=ls())
brary(dplyr)
library(dplyr)
library(car)
library(tibble)
library(MASS)
library(lme4)
require(GGally)
# install.packages("brms")
library(brms)
library(purrr)
library(Hmisc)
library(foreign)
library(ggplot2)
library(ggforce)
rm(list=ls())
library(dplyr)
library(car)
library(tibble)
library(MASS)
